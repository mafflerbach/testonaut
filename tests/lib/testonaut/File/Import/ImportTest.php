<?php

namespace testonaut\File;

$loader = require __DIR__ . '/../../../../../vendor/autoload.php';
$loader->add('testonaut', __DIR__ . '/../../../../../lib/');

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-06-06 at 21:05:08.
 */
class ImportTest extends \PHPUnit_Framework_TestCase {

  /**
   * @var Import
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp() {
    $config = \testonaut\Config::getInstance();
    $config->define('wikiPath', 'E:/xampp/htdocs/testonaut/tests/root');
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown() {
    
  }

  /**
   * @covers testonaut\File\Import::doImport
   * @todo   Implement testDoImport().
   */
  public function testDoSuccessfullImport() {
    $page = new \testonaut\Page('File.importTest');
    $this->object = new ImportProxyAllPassed('foo', 'baa', $page);
    $this->assertTrue($this->object->doImport());
  }

  /**
   * @covers testonaut\File\Import::doImport
   * @expectedException \testonaut\File\Import\Exception
   */
  public function testDoFailedConvert() {
    $page = new \testonaut\Page('File.importTest');
    $this->object = new ImportProxyFaildConvert('foo', 'baa', $page);
    $this->object->doImport();
  }

  /**
   * @covers testonaut\File\Import::doImport
   * @expectedException \testonaut\File\Import\Exception
   */
  public function testDoFailedImport() {
    $page = new \testonaut\Page('File.importTest');
    $this->object = new ImportProxyFaildImportToWiki('foo', 'baa', $page);
    $this->object->doImport();
  }

  /**
   * @covers testonaut\File\Import::doImport
   * @expectedException \testonaut\File\Import\Exception
   */
  public function testDoFailedUnpack() {
    $page = new \testonaut\Page('File.importTest'); #
    $this->object = new ImportProxyFaildUnpack('foo', 'baa', $page);
    $this->object->doImport();
  }

}

class ImportProxyAllPassed extends Import {

  public function convertImportToWiki($path) {
    return TRUE;
  }

  public function moveImportToWikiDir($path, $toDir) {
    return TRUE;
  }

  public function renameFileToContentFile($newPath, $object) {
    return TRUE;
  }

  public function _delete($dir) {
    return TRUE;
  }
}

class ImportProxyFaildConvert extends Import {

  public function convertImportToWiki($path) {
    return FALSE;
  }

  public function _delete($dir) {
    return TRUE;
  }
}

class ImportProxyFaildImportToWiki extends Import {

  public function moveImportToWikiDir($path, $toDir) {
    return FALSE;
  }

  public function _delete($dir) {
    return TRUE;
  }
}

class ImportProxyFaildUnpack extends Import {

  public function unpackFile($newPath, $object) {
    return FALSE;
  }

  public function _delete($dir) {
    return TRUE;
  }

}
